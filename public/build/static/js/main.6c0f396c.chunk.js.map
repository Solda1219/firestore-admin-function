{"version":3,"sources":["context/UserContext.js","components/auth/AuthOptions.js","components/layout/Header.js","components/pages/Home.js","components/auth/Login.js","components/auth/Register.js","context/PosContext.js","components/pos/PosProduct.js","components/pos/PosContainer.js","components/pos/UserEdit.js","components/pos/UserCreate.js","config.js","App.js","index.js"],"names":["createContext","AuthOptions","useContext","UserContext","userData","setUserData","history","useHistory","className","user","onClick","token","undefined","localStorage","setItem","push","Header","id","to","Home","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Login","classes","addToast","useToasts","useState","email","setEmail","password","setPassword","e","a","preventDefault","err","response","data","msg","appearance","autoDismiss","Container","component","maxWidth","CssBaseline","Avatar","Typography","variant","noValidate","onSubmit","required","fullWidth","label","name","autoComplete","autoFocus","onChange","target","value","validators","errorMessages","type","FormControlLabel","control","Checkbox","color","Button","Grid","container","item","xs","Link","href","descendingComparator","b","orderBy","headCells","numeric","disablePadding","EnhancedTableHead","props","order","onRequestSort","TableHead","TableRow","map","headCell","TableCell","key","align","padding","sortDirection","TableSortLabel","active","direction","property","event","visuallyHidden","useToolbarStyles","root","paddingLeft","paddingRight","highlight","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","numSelected","React","searchWord","setSearchWord","PosContext","users","setUsers","setfilteredUsers","filteredUsers","Toolbar","clsx","newValue","filter","String","firstname","lastname","indexOf","doFilterWith","marginBottom","table","minWidth","border","clip","height","overflow","position","top","EnhancedTable","setOrder","setOrderBy","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","setEditedUser","editedUser","emptyRows","Math","min","length","style","Paper","TableContainer","Table","aria-labelledby","size","aria-label","rowCount","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","filteredUser","labelId","hover","console","log","handleEdit","role","tabIndex","p","scope","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","Switch","checked","PosContainer","useEffect","Firebase","database","ref","on","snapshot","val","Provider","sm","UserEdit","firstName","setFirstName","lastName","setLastName","writeUserData","userId","set","lastUserId","setLastUserId","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","databaseURL","appId","requireLogin","from","next","meta","auth","getItem","redirect","App","initializeApp","guards","exact","path","UserCreate","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.6c0f396c.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport default createContext(null);\r\n","import React, { useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UserContext from \"../../context/UserContext\";\r\n\r\nexport default function AuthOptions() {\r\n  const { userData, setUserData } = useContext(UserContext);\r\n\r\n  const history = useHistory();\r\n\r\n  const register = () => history.push(\"/register\");\r\n  const login = () => history.push(\"/login\");\r\n  const logout = () => {\r\n    setUserData({\r\n      token: undefined,\r\n      user: undefined,\r\n    });\r\n    localStorage.setItem(\"auth-token\", \"\");\r\n    localStorage.setItem(\"displayName\", \"\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <nav className=\"auth-options\">\r\n      {userData.user ? (\r\n        <button onClick={logout}>Log out</button>\r\n      ) : \r\n        (<>\r\n          {/* <button onClick={register}>Register</button> */}\r\n          <button onClick={login}>Log in</button>\r\n        </>\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthOptions from \"../auth/AuthOptions\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <header id=\"header\">\r\n      <Link to=\"/\">\r\n        <h1 className=\"title\">Theo</h1>\r\n      </Link>\r\n      <AuthOptions />\r\n    </header>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// import { Link } from \"react-router-dom\";\r\n\r\n\r\nexport default function Home() {\r\n  const history = useHistory();\r\n\r\n  const { userData } = useContext(UserContext);\r\n  if (userData.user){\r\n    history.push(\"/pos\");\r\n  }\r\n  return (\r\n    <></>\r\n  )\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport Axios from \"axios\";\r\n// import ErrorNotice from \"../misc/ErrorNotice\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Link,\r\n  Grid,\r\n  Typography,\r\n  Container\r\n} from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n\r\nexport default function Login() {\r\n  const classes = useStyles();\r\n  const { addToast } = useToasts()\r\n\r\n  const [email, setEmail] = useState(() => '');\r\n  const [password, setPassword] = useState(() => '');\r\n  // const [error, setError] = useState();\r\n\r\n  const { setUserData } = useContext(UserContext);\r\n  const history = useHistory();\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const loginUser = { email, password };\r\n      // const loginRes = await Axios.post(\r\n      //   \"http://localhost:5000/users/login\",\r\n      //   loginUser\r\n      // );\r\n      setUserData({\r\n        token: \"theo\",\r\n        user: \"theo\",\r\n      });\r\n      localStorage.setItem(\"auth-token\", \"theo\");\r\n      localStorage.setItem('displayName', \"theo\");\r\n      history.push(\"/pos\");\r\n    } catch (err) {\r\n      addToast(err.response.data.msg, {\r\n        appearance: 'error',\r\n        autoDismiss: true,\r\n        marginTop: \"30px\"\r\n      })\r\n      // err.response.data.msg && setError(err.response.data.msg);\r\n    }\r\n  };\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <ValidatorForm className={classes.form} noValidate onSubmit={submit}>\r\n          <TextValidator\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            value = {email}\r\n            validators={['required', 'isEmail']}\r\n            errorMessages={['this field is required', 'email is not valid']}\r\n          />\r\n          <TextValidator\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            value = {password}\r\n            validators={['required']}\r\n            errorMessages={['this field is required']}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"/register\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </ValidatorForm>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useContext, useEffect} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport Axios from \"axios\";\r\n// import ErrorNotice from \"../misc/ErrorNotice\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  // TextField,\r\n  Link,\r\n  Grid,\r\n  Typography,\r\n  Container\r\n} from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Register() {\r\n  const classes = useStyles();\r\n  const { addToast } = useToasts()\r\n\r\n  const [email, setEmail] = useState(() => '');\r\n  const [password, setPassword] = useState(() => '');\r\n  const [passwordCheck, setPasswordCheck] = useState(() => '');\r\n  const [firstName, setFirstName] = useState(() => '');\r\n  const [lastName, setLastName] = useState(() => '');\r\n  // const [error, setError] = useState();\r\n  // const form = useRef();\r\n  const { setUserData } = useContext(UserContext);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\r\n      \r\n      if (value !== password) {\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n    return () => {\r\n      ValidatorForm.removeValidationRule('isPasswordMatch');\r\n    }\r\n  }, [password])\r\n\r\n  const submit = async (e) => {\r\n    console.log('submit');\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const newUser = { email, password, passwordCheck, firstName, lastName };\r\n      console.log(newUser)\r\n      await Axios.post(\"http://localhost:5000/users/register\", newUser);\r\n      const loginRes = await Axios.post(\"http://localhost:5000/users/login\", {\r\n        email,\r\n        password,\r\n      });\r\n      console.log(loginRes);\r\n      setUserData({\r\n        token: loginRes.data.token,\r\n        user: firstName+ ' '+ lastName,\r\n      });\r\n      localStorage.setItem(\"auth-token\", loginRes.data.token);\r\n      localStorage.setItem('displayName', firstName+' '+ lastName);\r\n      history.push(\"/pos\");\r\n    } catch (err) {\r\n      addToast(err.response.data.msg, {\r\n        appearance: 'error',\r\n        autoDismiss: true,\r\n        marginTop: \"30px\"\r\n      })\r\n      // err.response.data.msg && setError(err.response.data.msg);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <ValidatorForm className={classes.form} noValidate onSubmit={submit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextValidator\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                onChange={(e) => setFirstName(e.target.value)}\r\n                autoFocus\r\n                value={firstName}\r\n                validators={['required']}\r\n                errorMessages={['this field is required']}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextValidator\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                onChange={(e) => setLastName(e.target.value)}\r\n                autoComplete=\"lname\"\r\n                value={lastName}\r\n                validators={['required']}\r\n                errorMessages={['this field is required']}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextValidator\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                value = {email}\r\n                validators={['required', 'isEmail']}\r\n                errorMessages={['this field is required', 'email is not valid']}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextValidator\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                value = {password}\r\n                validators={['required']}\r\n                errorMessages={['this field is required']}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextValidator\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"confirm\"\r\n                label=\"Password Confirm\"\r\n                type=\"password\"\r\n                id=\"confirm\"\r\n                autoComplete=\"current-confirm\"\r\n                onChange={(e) => setPasswordCheck(e.target.value)}\r\n                value = {passwordCheck}\r\n                validators={['isPasswordMatch', 'required']}\r\n                errorMessages={['password mismatch', 'this field is required']}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </ValidatorForm>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import { createContext } from \"react\";\r\n\r\nexport default createContext(null);","import React, { useContext} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PosContext from \"../../context/PosContext\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport SearchBar from \"material-ui-search-bar\";\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'id', numeric: false, disablePadding: false, label: 'Id' },\r\n  { id: 'firstname', numeric: false, disablePadding: true, label: 'First Name' },\r\n  { id: 'lastname', numeric: true, disablePadding: false, label: 'Last Name' },\r\n  { id: 'email', numeric: true, disablePadding: false, label: 'Email' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n  const [searchWord, setSearchWord]= React.useState('');\r\n  const { setUsers, users, setfilteredUsers, filteredUsers}= useContext(PosContext);\r\n  \r\n  \r\n  if(searchWord=== ''){\r\n  \tsetfilteredUsers(users);\r\n  }\r\n  const doFilterWith = (newValue)=> {\r\n    setSearchWord(newValue);\r\n  \tsetfilteredUsers(users.filter(user => String(user.firstname+user.lastname+user.email).indexOf(String(searchWord))!==-1 ));\r\n  }\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          Users\r\n        </Typography>\r\n      )}\r\n\r\n      <SearchBar\r\n      \tvalue= {searchWord}\r\n        onChange={(newValue) => doFilterWith(newValue)}\r\n        \r\n      />\r\n      \r\n    </Toolbar>\r\n  );\r\n};\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n  const history = useHistory();\r\n\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  // const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const {setUsers, users, setfilteredUsers, filteredUsers}= useContext(PosContext);\r\n  const {editedUser, setEditedUser} = useContext(UserContext);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  function object_equals( x, y ) {\r\n\t  if ( x === y ) return true;\r\n\t    // if both x and y are null or undefined and exactly the same\r\n\r\n\t  if ( ! ( x instanceof Object ) || ! ( y instanceof Object ) ) return false;\r\n\t    // if they are not strictly equal, they both need to be Objects\r\n\r\n\t  if ( x.constructor !== y.constructor ) return false;\r\n\t    // they must have the exact same prototype chain, the closest we can do is\r\n\t    // test there constructor.\r\n\r\n\t  for ( var p in x ) {\r\n\t    if ( ! x.hasOwnProperty( p ) ) continue;\r\n\t      // other properties were tested using x.constructor === y.constructor\r\n\r\n\t    if ( ! y.hasOwnProperty( p ) ) return false;\r\n\t      // allows to compare x[ p ] and y[ p ] when set to undefined\r\n\r\n\t    if ( x[ p ] === y[ p ] ) continue;\r\n\t      // if they have the same strict value or identity then they are equal\r\n\r\n\t    if ( typeof( x[ p ] ) !== \"object\" ) return false;\r\n\t      // Numbers, Strings, Functions, Booleans must be strictly equal\r\n\r\n\t    if ( ! object_equals( x[ p ],  y[ p ] ) ) return false;\r\n\t      // Objects and Arrays must be tested recursively\r\n\t  }\r\n\r\n\t  for ( p in y )\r\n\t    if ( y.hasOwnProperty( p ) && ! x.hasOwnProperty( p ) )\r\n\t      return false;\r\n\t        // allows x[ p ] to be set to undefined\r\n\r\n\t  return true;\r\n\t}\r\n\r\n  const handleEdit = (event, filteredUser) => {\r\n    console.log(filteredUser);\r\n    setEditedUser(filteredUser);\r\n    history.push(\"/userEdit\");\r\n  }\r\n\r\n  const handleCreate= ()=>{\r\n    history.push(\"/userCreate\");\r\n  }\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, filteredUsers.length - page * rowsPerPage);\r\n  \r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button onClick={() => handleCreate()} variant=\"contained\" color=\"primary\" style= {{marginBottom: 10}}>\r\n          +Create\r\n      </Button>\r\n      <Paper className={classes.paper}>\r\n        \r\n        <EnhancedTableToolbar />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={filteredUsers.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(filteredUsers, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((filteredUser, index) => {\r\n\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleEdit(event, filteredUser)}\r\n                      role=\"checkbox\"\r\n                      tabIndex={-1}\r\n                      key={filteredUser.id}\r\n                    >\r\n                      <TableCell p={1}>\r\n                        {filteredUser.id}\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"filteredUser\" padding=\"none\">\r\n                        {filteredUser.firstname}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{filteredUser.lastname}</TableCell>\r\n                      <TableCell align=\"right\">{filteredUser.email}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={filteredUsers.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PosProduct from \"./PosProduct\";\r\nimport PosPrice from \"./PosPrice\";\r\nimport PosContext from \"../../context/PosContext\";\r\nimport Axios from \"axios\";\r\nimport Firebase from 'firebase';\r\nimport \"firebase/database\";\r\n\r\nimport {\r\n  Grid\r\n} from '@material-ui/core'\r\n\r\nexport default function PosContainer() {\r\n\tconst [users, setUsers] = useState(\r\n\t\t[]\r\n\t);\r\n\r\n\tconst [filteredUsers, setfilteredUsers] = useState([]);\r\n\t\r\n\tfunction writeUserData(userId, firstname, lastname, email) {\r\n\t\tFirebase.database().ref('/users/'+userId).set({\r\n\t\t  id: userId,\r\n\t\t  firstname: firstname,\r\n\t\t  lastname: lastname,\r\n\t\t  email: email\r\n\t\t});\r\n\t}\r\n\tconst getUserData = () => {\r\n\t\tlet ref = Firebase.database().ref('/users');\r\n\t\tref.on('value', snapshot => {\r\n\t\t\tconsole.log(snapshot.val());\r\n\t\t\tif(snapshot.val()!= null){\r\n\t\t\t\tconsole.log(\"really??\");\r\n\t\t\t\tsetUsers(snapshot.val());\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t\tconsole.log('DATA RETRIEVED');\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tconsole.log(\"here is effect\");\r\n\t\t// writeUserData(1, \"john\", \"Doe\", \"john@c.com\");\r\n\t\t// writeUserData(2, \"john2\", \"Doe2\", \"john2@c.com\");\r\n\t    getUserData();\r\n  \t}, []);\r\n\treturn (\r\n\t\t<PosContext.Provider value= {{users, setUsers, filteredUsers, setfilteredUsers}}>\r\n\t      \t<Grid container spacing={1} style={{marginTop: '38px'}}>\r\n\t      \t\t<Grid item xs={12} sm={12}>\r\n\t      \t\t\t<PosProduct/>\r\n\t      \t\t</Grid>\r\n\t      \t\t{/* <Grid item xs={4} sm= {4}>\r\n\t      \t\t\t<PosPrice/>\r\n\t      \t\t</Grid> */}\r\n\t      \t</Grid>\r\n\t\t</PosContext.Provider>\r\n\t);\r\n}","import React, { useState, useContext, useEffect} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport Axios from \"axios\";\r\nimport Firebase from 'firebase';\r\nimport \"firebase/database\";\r\n// import ErrorNotice from \"../misc/ErrorNotice\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  // TextField,\r\n  Link,\r\n  Grid,\r\n  Typography,\r\n  Container\r\n} from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function UserEdit() {\r\n  const classes = useStyles();\r\n  const { addToast } = useToasts()\r\n  const { editedUser, setEditedUser} = useContext(UserContext);\r\n  const [email, setEmail] = useState(() => editedUser.email);\r\n  const [firstName, setFirstName] = useState(() => editedUser.firstname);\r\n  const [lastName, setLastName] = useState(() => editedUser.lastname);\r\n  // const [error, setError] = useState();\r\n  // const form = useRef();\r\n  \r\n  const history = useHistory();\r\n\r\n  // useEffect(() => {\r\n  //   ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\r\n      \r\n  //     if (value !== password) {\r\n  //       return false;\r\n  //     }\r\n  //     return true;\r\n  //   });\r\n  //   return () => {\r\n  //     ValidatorForm.removeValidationRule('isPasswordMatch');\r\n  //   }\r\n  // }, [password])\r\n\r\n  function writeUserData(userId, firstname, lastname, email) {\r\n\t\tFirebase.database().ref('/users/'+userId).set({\r\n\t\t  id: userId,\r\n\t\t  firstname: firstname,\r\n\t\t  lastname: lastname,\r\n\t\t  email: email\r\n\t\t});\r\n\t}\r\n  const submit = async (e) => {\r\n    console.log('submit');\r\n    e.preventDefault();\r\n    writeUserData(editedUser.id, firstName, lastName, email);\r\n    history.push(\"/pos\");\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          User Update\r\n        </Typography>\r\n        <ValidatorForm className={classes.form} noValidate onSubmit={submit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextValidator\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                onChange={(e) => setFirstName(e.target.value)}\r\n                autoFocus\r\n                value={firstName}\r\n                validators={['required']}\r\n                errorMessages={['this field is required']}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextValidator\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                onChange={(e) => setLastName(e.target.value)}\r\n                autoComplete=\"lname\"\r\n                value={lastName}\r\n                validators={['required']}\r\n                errorMessages={['this field is required']}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextValidator\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                value = {email}\r\n                validators={['required', 'isEmail']}\r\n                errorMessages={['this field is required', 'email is not valid']}\r\n              />\r\n            </Grid>\r\n          \r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Update\r\n          </Button>\r\n        </ValidatorForm>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useContext, useEffect} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport Axios from \"axios\";\r\nimport Firebase from 'firebase';\r\nimport \"firebase/database\";\r\n// import ErrorNotice from \"../misc/ErrorNotice\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  // TextField,\r\n  Link,\r\n  Grid,\r\n  Typography,\r\n  Container\r\n} from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function UserEdit() {\r\n  const classes = useStyles();\r\n  const { addToast } = useToasts()\r\n  const { editedUser, setEditedUser} = useContext(UserContext);\r\n  const [email, setEmail] = useState(() => '');\r\n  const [firstName, setFirstName] = useState(() => '');\r\n  const [lastName, setLastName] = useState(() => '');\r\n  const [lastUserId, setLastUserId] = useState(()=> 1);\r\n  // const [error, setError] = useState();\r\n  // const form = useRef();\r\n  \r\n  const history = useHistory();\r\n\r\n  // useEffect(() => {\r\n  //   ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\r\n      \r\n  //     if (value !== password) {\r\n  //       return false;\r\n  //     }\r\n  //     return true;\r\n  //   });\r\n  //   return () => {\r\n  //     ValidatorForm.removeValidationRule('isPasswordMatch');\r\n  //   }\r\n  // }, [password])\r\n\r\n  function writeUserData(userId, firstname, lastname, email) {\r\n\t\tFirebase.database().ref('/users/'+userId).set({\r\n\t\t  id: userId,\r\n\t\t  firstname: firstname,\r\n\t\t  lastname: lastname,\r\n\t\t  email: email\r\n\t\t});\r\n\t}\r\n\r\n  const getLastUserId = () => {\r\n\t\tlet ref = Firebase.database().ref('/users');\r\n\t\tref.on('value', snapshot => {\r\n\t\t\tif(snapshot.val().length> 0){\r\n\t\t\t\tsetLastUserId(snapshot.val().length);\r\n\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t\tconsole.log('DATA RETRIEVED');\r\n\t}\r\n  useEffect(() => {\r\n      getLastUserId();\r\n  \t}, [])\r\n  const submit = async (e) => {\r\n    console.log('submit');\r\n    e.preventDefault();\r\n    writeUserData(lastUserId, firstName, lastName, email);\r\n    history.push(\"/pos\");\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          User Create\r\n        </Typography>\r\n        <ValidatorForm className={classes.form} noValidate onSubmit={submit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextValidator\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                onChange={(e) => setFirstName(e.target.value)}\r\n                autoFocus\r\n                value={firstName}\r\n                validators={['required']}\r\n                errorMessages={['this field is required']}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextValidator\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                onChange={(e) => setLastName(e.target.value)}\r\n                autoComplete=\"lname\"\r\n                value={lastName}\r\n                validators={['required']}\r\n                errorMessages={['this field is required']}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextValidator\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                value = {email}\r\n                validators={['required', 'isEmail']}\r\n                errorMessages={['this field is required', 'email is not valid']}\r\n              />\r\n            </Grid>\r\n          \r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Create\r\n          </Button>\r\n        </ValidatorForm>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","const firebaseConfig = {\r\n    apiKey: \"AIzaSyAvlWY8Hhz59Miea4GnHH_kBcxzd2l1jOM\",\r\n    authDomain: \"backendkopie.firebaseapp.com\",\r\n    projectId: \"backendkopie\",\r\n    storageBucket: \"backendkopie.appspot.com\",\r\n    messagingSenderId: \"985834946681\",\r\n    databaseURL: \"https://backendkopie-default-rtdb.firebaseio.com\",\r\n    appId: \"1:985834946681:web:738d3a00e6bae95228d4a8\"\r\n};\r\n\r\nexport default firebaseConfig\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport Header from \"./components/layout/Header\";\r\nimport Home from \"./components/pages/Home\";\r\nimport Login from \"./components/auth/Login\";\r\nimport Register from \"./components/auth/Register\";\r\nimport PosContainer from \"./components/pos/PosContainer\";\r\nimport UserEdit from \"./components/pos/UserEdit\";\r\nimport UserCreate from \"./components/pos/UserCreate\";\r\nimport UserContext from \"./context/UserContext\";\r\nimport { ToastProvider } from 'react-toast-notifications';\r\nimport { GuardProvider, GuardedRoute } from 'react-router-guards';\r\nimport Firebase from 'firebase';\r\nimport firebaseConfig from './config';\r\nimport \"./style.css\";\r\n\r\n// const MyCustomToast = ({ appearance, children }) => (\r\n//   <div style={{ marginTop: '50px' }}>\r\n//     {children}\r\n//   </div>\r\n// );\r\nconst requireLogin = (to, from, next) => {\r\n    if (to.meta.auth) {\r\n      if (localStorage.getItem('displayName')!== '') {\r\n        next();\r\n      }\r\n      next.redirect('/login');\r\n    } else {\r\n      next();\r\n    }\r\n  };\r\n\r\n\r\nexport default function App() {\r\n  const [userData, setUserData] = useState({\r\n    token: undefined,\r\n    user: undefined,\r\n  });\r\n\r\n  const [editedUser, setEditedUser]= useState('');\r\n\r\n  useEffect(() => {\r\n    const checkLoggedIn = async () => {\r\n      let token = localStorage.getItem(\"auth-token\");\r\n      if (token === null) {\r\n        localStorage.setItem(\"auth-token\", \"\");\r\n        localStorage.setItem(\"displayName\", \"\");\r\n        token = \"\";\r\n      }\r\n      const tokenRes = await Axios.post(\r\n        \"http://localhost:5000/users/tokenIsValid\",\r\n        null,\r\n        { headers: { \"x-auth-token\": token } }\r\n      );\r\n      if (tokenRes.data) {\r\n        setUserData({\r\n          token,\r\n          user: localStorage.getItem(\"displayName\"),\r\n        })\r\n        // const userRes = await Axios.get(\"http://localhost:5000/users/\", {\r\n        //   headers: { \"x-auth-token\": token },\r\n        // });\r\n        // console.log(userRes.data);\r\n        // setUserData({\r\n        //   token,\r\n        //   user: userRes.data,\r\n        // });\r\n      }\r\n    };\r\n    Firebase.initializeApp(firebaseConfig);\r\n    // checkLoggedIn();\r\n  }, []);\r\n  \r\n  \r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        \r\n        <UserContext.Provider value={{ userData, setUserData, editedUser, setEditedUser }}>\r\n          <Header />\r\n          <ToastProvider>\r\n          <div className=\"container\">\r\n            <GuardProvider guards={[requireLogin]}>\r\n              <Switch>\r\n                <GuardedRoute exact path=\"/\" component={Home} />\r\n                <GuardedRoute path=\"/login\" component={Login} />\r\n                {/* <GuardedRoute path=\"/register\" component={Register} /> */}\r\n                <GuardedRoute path= \"/pos\" component= {PosContainer} meta={{ auth: true }}/>\r\n                <GuardedRoute path= \"/userEdit\" component= {UserEdit} meta= {{auth: true}}/>\r\n                <GuardedRoute path= \"/userCreate\" component= {UserCreate} meta= {{auth: true}}/>\r\n                \r\n              </Switch>\r\n            </GuardProvider>\r\n          </div>\r\n          </ToastProvider>\r\n        </UserContext.Provider>\r\n        \r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}